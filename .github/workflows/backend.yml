name: Backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-publish:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'


      - name: deploy DataBase
        run: |
          sudo systemctl start postgresql
          sudo -u postgres psql -c "ALTER USER postgres WITH PASSWORD '080906';"


          sudo -u postgres psql postgres <<EOF
          CREATE TABLE access_right (
            id SERIAL PRIMARY KEY,
            name VARCHAR(32)
          );

          CREATE TABLE users (
            id SERIAL PRIMARY KEY,
            id_access_right INT NOT NULL REFERENCES access_right(id) ON DELETE CASCADE,
            username VARCHAR(32) NOT NULL,
            email VARCHAR(64) NOT NULL,
            hash_password VARCHAR(64) NOT NULL
          );

          CREATE TABLE measuring_device_system (
            id SERIAL PRIMARY KEY,
            model VARCHAR(32) NOT NULL,
            fuel_quantity INT NOT NULL,
            coolant_temperature INT NOT NULL,
            oil_pressure INT NOT NULL
          );

          CREATE TABLE onboard_control_system (
            id SERIAL PRIMARY KEY,
            model VARCHAR(32) NOT NULL,
            brake_linings_status VARCHAR(16) NOT NULL,
            engine_oil_level VARCHAR(16) NOT NULL,
            brake_fluid_level VARCHAR(16) NOT NULL,
            transmission_fluid_level VARCHAR(16) NOT NULL,
            coolant_level VARCHAR(16) NOT NULL,
            filter_status VARCHAR(16) NOT NULL,
            instrument_lamps_status VARCHAR(16) NOT NULL
          );

          CREATE TABLE route_computer (
            id SERIAL PRIMARY KEY,
            model VARCHAR(32) NOT NULL,
            fuel_consumption INT NOT NULL,
            mileage INT NOT NULL
          );

          CREATE TABLE antivirus (
            id SERIAL PRIMARY KEY,
            version VARCHAR(16) NOT NULL,
            update_data TIMESTAMP NOT NULL DEFAULT NOW(),
            status VARCHAR(16) NOT NULL CHECK (status IN ('active', 'inactive')),
            last_scan_data TIMESTAMP NOT NULL,
            last_scan_result VARCHAR(16) NOT NULL
          );


          CREATE TABLE car (
            id SERIAL PRIMARY KEY,
            id_user INT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
            id_antivirus INT NOT NULL REFERENCES antivirus(id) ON DELETE CASCADE,
            id_onboard_control_system INT NOT NULL REFERENCES onboard_control_system(id) ON DELETE CASCADE,
            id_measuring_device_system INT NOT NULL REFERENCES measuring_device_system(id) ON DELETE CASCADE,
            id_route_computer INT NOT NULL REFERENCES route_computer(id) ON DELETE CASCADE,
            model VARCHAR(32) NOT NULL,
            plate VARCHAR(6) NOT NULL,
            color VARCHAR(10) NOT NULL
          );

          CREATE TABLE log (
            id SERIAL PRIMARY KEY,
            id_source INT REFERENCES users(id) ON DELETE CASCADE,
            data TIMESTAMP NOT NULL DEFAULT NOW(),
            type VARCHAR(16) NOT NULL,
            message VARCHAR(128) NOT NULL
          );
          EOF



      - name: Install dependencies
        run: |
          cd backend
          npm install

      - name: Run tests
        run: |
          cd backend
          npm test

      - name: Deploy to server and build locally
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |

            if [ ! -d "/root/lab4" ]; then
              git clone https://github.com/MisterIB/RGZ_TMP.git /root/lab4
            fi
            cd /root/lab4/backend
            git pull origin main
            npm run start
            echo "correct"